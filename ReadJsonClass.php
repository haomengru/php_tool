<?php

class ReadJsonClass 
{

	public function __construct()
	{
		  header("content-type:text/html;charset=utf-8");
	}

	public function read_json($filename)
	{

		$str = file_get_contents($filename);

		$_str = str_replace('}{','},{',$str);
		$json_str = "[".$_str."]";

		$result = json_decode($json_str,true);

		$temp = array();
		$new_arr = array();

		foreach($result as $row){
			if (isset($row['status'])) {
				
				$temp['test'] = $row['test'];
				$temp['status'] = $row['status'];
				$temp['message'] = $row['message'];

				$new_arr[] = $temp;
				
			}
			
		}

		return $new_arr;
	}

	 /**
        * set the properties of export file
        * create by : HMR 2015-2-4
	 */

    public function setProperties($objProps)
    {
        $objProps->setCreator("admin");
        $objProps->setLastModifiedBy("admin");
        $objProps->setTitle("Office XLS Test Document");
        $objProps->setSubject("Office XLS Test Document, Demo");
        $objProps->setDescription("Test document, generated by PHPExcel.");
        $objProps->setKeywords("office excel PHPExcel");
        $objProps->setCategory("Test");

    }
     /**
        * set the properties of  file when output
        * create by : HMR 2015-2-4
	 */
    public function outputDocument($objExcel, $outputFileName)
    {
         $objWriter = new PHPExcel_Writer_Excel5($objExcel);
        // $objWriter->save($outputFileName);
        header("Content-Type: application/force-download");
        header("Content-Type: application/octet-stream");
        header("Content-Type: application/download");
        header('Content-Disposition:inline;filename="'.$outputFileName.'"');
        header("Content-Transfer-Encoding: binary");
        header("Expires: Mon, 26 Jul 1997 05:00:00 GMT");
        header("Last-Modified: " . gmdate("D, d M Y H:i:s") . " GMT");
        header("Cache-Control: must-revalidate, post-check=0, pre-check=0");
        header("Pragma: no-cache");
        $objWriter->save('php://output');

    }   

	public function export_execl($filename)
	{

		$data = array();	
        $data = $this->read_json($filename);
      
        $temp = array();
        $new_arr = array();
        $result_array = array();
        //get the key of array
        $temp = array_keys($data[0]);
        foreach($temp as $row){
            $new_arr[$row]=$row; 
        }
        $result_array[] = $new_arr;
        $data = array_merge($result_array, $data);
        $objExcel = new PHPExcel();
        
        //set document properties
        $objProps = $objExcel->getProperties();
        $this->setProperties($objProps);
        //set the current index of sheetã€‚
        $objExcel->setActiveSheetIndex(0);
        $objActSheet = $objExcel->getActiveSheet();
        $objActSheet->setTitle('reporting');
    
        
        //set the contents of cell 
        $mid = array('A','B','C');
        foreach($data as $k => $v){
            $num = $k+1;
            $v = array_values($v);
            $mid = array_values($mid);
            for($j=0; $j<count($v); $j++){   
                $objActSheet->setCellValue($mid[$j].$num, $v[$j]);             
                $objActSheet->getColumnDimension($mid[$j])->setWidth(15);
                
                $objStyle = $objActSheet->getStyle($mid[$j].$num);
                $objStyle->getNumberFormat()->setFormatCode(PHPExcel_Style_NumberFormat::FORMAT_NUMBER);  
                  
                //set font 
                $objFont = $objStyle->getFont();  
                $objFont->setName('Courier New');  
                $objFont->setSize(10);  
                $objFont->getColor()->setARGB('#000000');  
                  
                //set alignment  
                $objAlign = $objStyle->getAlignment();  
                $objAlign->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);  
                $objAlign->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);  
            }
        }
        //add new worksheet
        $objExcel->createSheet();
        $objExcel->getSheet(1)->setTitle('test');
        //output contents
        $outputFileName = "reporting.xls";
        $this->outputDocument($objExcel, $outputFileName);
	}
}